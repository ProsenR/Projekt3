package Kap8.Banküberweisung;

import org.w3c.dom.ls.LSOutput;

import java.util.Scanner;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.border.*;

public class Bank extends JFrame {
    private JRadioButton radioAuszahlung;
    private JRadioButton radioEinzahlung;
    private JLabel betrag;
    private JTextField textFieldBetrag;
    private JButton buttonDurchfuehren;
    private JLabel kontostand;
    private JLabel kontostandBetrag;
    private JTextPane paneProtokoll;
    private JPanel Protokoll;
    private JLabel protokoll;
    private JLabel labelUeberweisung;

    private double getKontostand = 1000;


    double Kontostand;
    String name;
    String iban;


    public Bank() {
        setTitle("Bank");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(600, 400);
        setLocationRelativeTo(null);
        setVisible(true);
        setContentPane(Protokoll);

        buttonDurchfuehren.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                double betrag = Double.parseDouble(textFieldBetrag.getText());
                String protokoll = paneProtokoll.getText();

                if (betrag <= 0) {
                    JOptionPane.showMessageDialog(null, "Bitte gib einen gültigen Betrag ein");
                }

                if (radioEinzahlung.isSelected()) {
                    getKontostand += betrag;

                } else if (radioAuszahlung.isSelected()) {
                    if (betrag > getKontostand) {
                        JOptionPane.showMessageDialog(null, "Nicht genügend Guthaben für die abhebung");
                    }
                    getKontostand -= betrag;
                } else {
                    JOptionPane.showMessageDialog(null, "Wählen Sie Einzahlung oder Auszahlung");
                }

                kontostand.setText("Kontostand: " + getKontostand + " €");


            }
        });
    }



    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        Protokoll = new JPanel();
        Protokoll.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(6, 4, new Insets(0, 0, 0, 0), -1, -1));
        radioAuszahlung = new JRadioButton();
        radioAuszahlung.setSelected(false);
        radioAuszahlung.setText("Auszahlung");
        Protokoll.add(radioAuszahlung, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        radioEinzahlung = new JRadioButton();
        radioEinzahlung.setText("Einzahlung");
        Protokoll.add(radioEinzahlung, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        betrag = new JLabel();
        betrag.setText("Betrag");
        Protokoll.add(betrag, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFieldBetrag = new JTextField();
        Protokoll.add(textFieldBetrag, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        buttonDurchfuehren = new JButton();
        buttonDurchfuehren.setText("Durchführen");
        Protokoll.add(buttonDurchfuehren, new com.intellij.uiDesigner.core.GridConstraints(2, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        kontostand = new JLabel();
        kontostand.setText("Kontostand:");
        Protokoll.add(kontostand, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        kontostandBetrag = new JLabel();
        kontostandBetrag.setText("1000€");
        Protokoll.add(kontostandBetrag, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        paneProtokoll = new JTextPane();
        paneProtokoll.setText("Verlauf");
        Protokoll.add(paneProtokoll, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        protokoll = new JLabel();
        protokoll.setText("Protokoll:");
        Protokoll.add(protokoll, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelUeberweisung = new JLabel();
        labelUeberweisung.setText("Überweisung");
        Protokoll.add(labelUeberweisung, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 2, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(radioEinzahlung);
        buttonGroup.add(radioAuszahlung);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return Protokoll;
    }

    public static void main(String[] args) {
        new Bank();
    }
}

